version: '3.7'
networks:
  default:
    external:
      name: qps-infra
services:
  nginx:
    image: nginx
    container_name: qps-nginx
    volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
     - ./nginx/conf.d:/etc/nginx/conf.d:ro
     - ./nginx/html:/usr/share/nginx/html:ro
     - ./nginx/htpasswd:/usr/share/nginx/htpasswd:ro
     - ./selenoid/video:/usr/share/nginx/video:rw
    ports:
     - "80:80"
    depends_on:
     - "zafira"
     - "zafira-ui"
     - "selenium-hub"
     - "elasticsearch"
    restart: always
  db:
    image: qaprosoft/postgres:9.6
    volumes:
     - ./pgdata:/var/lib/postgresql/data
     - ./database:/docker-entrypoint-initdb.d
    ports:
     - "5432:5432"
    env_file:
     - variables.env
    restart: always
  zafira:
    image: qaprosoft/zafira:4.1.90
    env_file:
      - variables.env
    volumes:
      - ./assets:/opt/assets
    ports:
      - "8002:8000"
    depends_on:
      - "db"
      - "rabbitmq"
      - "redis"
    restart: always
  zafira-ui:
    image: qaprosoft/zafira-ui:1.38
    env_file:
      - variables.env
    depends_on:
      - "zafira"
    restart: always
  redis:
    image: redis:5.0.5
    volumes:
     - ./config/redis.conf:/etc/redis/redis.conf:ro
    command: ["redis-server", "/etc/redis/redis.conf"]
    ports:
     - 6379:6379
    restart: always
  rabbitmq:
    image: qaprosoft/rabbitmq
    env_file:
     - variables.env
    volumes:
     - ./config/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
     - 15672:15672
#     - 61613:61613
     - 5672:5672
    restart: always
  ftp:
    image: qaprosoft/pure-ftpd:latest
    env_file:
     - variables.env
    volumes:
    - $PWD/selenoid/video:/usr/share/ftp:rw
    ports:
     - "21:21"
     - "30000-30009:30000-30009"
    restart: always
  selenium-hub:
    image: qaprosoft/selenium-hub:3.5.1
    env_file:
     - variables.env
#    environment:
#     - JAVA_OPTS=-Dselenium.LOGGER.level=FINEST
    ports:
     - 4446:4444
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    volumes:
     - ./esdata:/usr/share/elasticsearch/data
     - ./config/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml
    environment:
     - bootstrap.memory_lock=true
     - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
     - 9200:9200
    restart: always
  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.2
    volumes:
     - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
     - ./config/mapping.json:/mapping.json:ro
    restart: always
    depends_on:
     - elasticsearch
  ggr:
    image: aerokube/ggr:latest-release
    volumes:
      - ./grid-router/:/etc/grid-router:ro
    ports:
     - "4444:4444"
    restart: always
  selenoid:
    networks:
      default: null
    image: aerokube/selenoid:latest-release
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/selenoid/:/etc/selenoid/
      - $PWD/selenoid/video/:/opt/selenoid/video/
    environment:
      - OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/selenoid/video/
    command: ["-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/opt/selenoid/video", "-timeout", "3m0s", "-container-network", "qps-infra"]
    restart: always
