{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"QPS Infrastructure QPS-Infra is a dockerized QA infrastructure solution for Test Automation. It is integrated by default with carina-core open source framework and uses Jenkins as a CI Tool. QPS-Infra is built on top of popular docker solutions, it includes Postgres database, Zafira Reporting Tool , Jenkins Master/Slaves Nodes, Selenium Hub, SonarQube, RabbitMQ, etc. All components are deployed under NGINX WebServer which can be configured in a fully secured environment QPS-Infra and its subcomponents all together can be used as an effective Test Automation infrastructure for test automation development, execution, management, etc. License Code - Apache Software License v2.0 Documentation and Site - Creative Commons Attribution 4.0 International License","title":"Overview"},{"location":"#qps-infrastructure","text":"QPS-Infra is a dockerized QA infrastructure solution for Test Automation. It is integrated by default with carina-core open source framework and uses Jenkins as a CI Tool. QPS-Infra is built on top of popular docker solutions, it includes Postgres database, Zafira Reporting Tool , Jenkins Master/Slaves Nodes, Selenium Hub, SonarQube, RabbitMQ, etc. All components are deployed under NGINX WebServer which can be configured in a fully secured environment QPS-Infra and its subcomponents all together can be used as an effective Test Automation infrastructure for test automation development, execution, management, etc.","title":"QPS Infrastructure"},{"location":"#license","text":"Code - Apache Software License v2.0 Documentation and Site - Creative Commons Attribution 4.0 International License","title":"License"},{"location":"config-guide/","text":"Configuration Guide SCM Integration For enterprise github or gitlab, you can declare the following global variables in Jenkins and the entire infrastructure will use them immediately by default: Manage jenkins - Configure system Global properties - Add property GITHUB_API_URL - https://$GITHUB_HOST/api/v3 GITHUB_HOST - github.mydomain.com GITHUB_HTML_URL - https://$GITHUB_HOST/$GITHUB_ORGANIZATION GITHUB_ORGANIZATION - myorganization GITHUB_SSH_URL - git@$GITHUB_HOST:$GITHUB_ORGANIZATION onPullRequest Job/Event setup Setup GitHub PullRequest plugin Open Jenkins - Credentials Update Username and Password for \"ghprbhook-token\" credentials Set up \"GitHub Pull Request Builder\": Go to Manage Jenkins - Configure System Specify a value for GitHub Server API URL, for example, https://api.github.com Note: corporate versions of GitHub should have a different value, for example, https://github.mydomain.com/api/v3 Provide GitHub credentials with Admin privileges for your organization Check the \"Auto-manage webhooks\" param [Optional] update \"Commit Status Context\" to a value such as qps-infra to identify that changes in GitHub PR are automatically generated by infra Save changes Note: be sure to test integration through the Jenkins UI Test the integration with Github through the Jenkins UI Set Credentials - Test basic connection to GitHub Set Repository owner/name - Test Permissions to a Repository Set Issue ID/Comment - Test adding comment to Pull Request Send Pull request to launch onPullRequest Job(s) Go to your GitHub repository Create new Pull Request * Verify in Jenkins that onPullRequest-repo,onPullRequest-repo-trigger jobs launched and succeed Organization Setup Register Organization Open Jenkins- Management_Jobs folder. Run \"RegisterOrganization\" providing your SCM (GitHub) organization name as folderName New folder is created with default content Create organization: Register Repository Open your organization folder Run \"RegisterRepository\" pointing to your TestNG repository (use https://github.com/qaprosoft/carina-demo as sample repo to scan) Repository should be scanned and TestNG jobs created Create Repository: onPush Job/Event setup Setup GitHub WebHook Go to your GitHub repository Click \"Settings\" tab Click \"Webhooks\" menu option Click \"Add webhook\" button Type http://your-jenkins-domain.com/jenkins/github-webhook/ into \"Payload URL\" field Select application/json in \"Content Type\" field Tick \"Send me everything.\" option Click \"Add webhook\" button Trigger onPush Job(s) After any push or merge into the master onPush-repo job is launched, suites scanned, TestNG jobs created Troubleshooting Support Channel Join Telegram channel in case of any question","title":"Configuration Guide"},{"location":"config-guide/#configuration-guide","text":"","title":"Configuration Guide"},{"location":"config-guide/#scm-integration","text":"For enterprise github or gitlab, you can declare the following global variables in Jenkins and the entire infrastructure will use them immediately by default: Manage jenkins - Configure system Global properties - Add property GITHUB_API_URL - https://$GITHUB_HOST/api/v3 GITHUB_HOST - github.mydomain.com GITHUB_HTML_URL - https://$GITHUB_HOST/$GITHUB_ORGANIZATION GITHUB_ORGANIZATION - myorganization GITHUB_SSH_URL - git@$GITHUB_HOST:$GITHUB_ORGANIZATION","title":"SCM Integration"},{"location":"config-guide/#onpullrequest-jobevent-setup","text":"","title":"onPullRequest Job/Event setup"},{"location":"config-guide/#setup-github-pullrequest-plugin","text":"Open Jenkins - Credentials Update Username and Password for \"ghprbhook-token\" credentials","title":"Setup GitHub PullRequest plugin"},{"location":"config-guide/#set-up-github-pull-request-builder","text":"Go to Manage Jenkins - Configure System Specify a value for GitHub Server API URL, for example, https://api.github.com Note: corporate versions of GitHub should have a different value, for example, https://github.mydomain.com/api/v3 Provide GitHub credentials with Admin privileges for your organization Check the \"Auto-manage webhooks\" param [Optional] update \"Commit Status Context\" to a value such as qps-infra to identify that changes in GitHub PR are automatically generated by infra Save changes Note: be sure to test integration through the Jenkins UI","title":"Set up \"GitHub Pull Request Builder\":"},{"location":"config-guide/#test-the-integration-with-github-through-the-jenkins-ui","text":"Set Credentials - Test basic connection to GitHub Set Repository owner/name - Test Permissions to a Repository Set Issue ID/Comment - Test adding comment to Pull Request","title":"Test the integration with Github through the Jenkins UI"},{"location":"config-guide/#send-pull-request-to-launch-onpullrequest-jobs","text":"Go to your GitHub repository Create new Pull Request * Verify in Jenkins that onPullRequest-repo,onPullRequest-repo-trigger jobs launched and succeed","title":"Send Pull request to launch onPullRequest Job(s)"},{"location":"config-guide/#organization-setup","text":"","title":"Organization Setup"},{"location":"config-guide/#register-organization","text":"Open Jenkins- Management_Jobs folder. Run \"RegisterOrganization\" providing your SCM (GitHub) organization name as folderName New folder is created with default content Create organization:","title":"Register Organization"},{"location":"config-guide/#register-repository","text":"Open your organization folder Run \"RegisterRepository\" pointing to your TestNG repository (use https://github.com/qaprosoft/carina-demo as sample repo to scan) Repository should be scanned and TestNG jobs created Create Repository:","title":"Register Repository"},{"location":"config-guide/#onpush-jobevent-setup","text":"","title":"onPush Job/Event setup"},{"location":"config-guide/#setup-github-webhook","text":"Go to your GitHub repository Click \"Settings\" tab Click \"Webhooks\" menu option Click \"Add webhook\" button Type http://your-jenkins-domain.com/jenkins/github-webhook/ into \"Payload URL\" field Select application/json in \"Content Type\" field Tick \"Send me everything.\" option Click \"Add webhook\" button","title":"Setup GitHub WebHook"},{"location":"config-guide/#trigger-onpush-jobs","text":"After any push or merge into the master onPush-repo job is launched, suites scanned, TestNG jobs created","title":"Trigger onPush Job(s)"},{"location":"config-guide/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"config-guide/#support-channel","text":"Join Telegram channel in case of any question","title":"Support Channel"},{"location":"faq/","text":"Erat causa in vigilans pectore Ferox educta Lorem markdownum ramos, dura suadet Eumenides pudet; et non vultus dixit ostendens non omnis ! Auras maiorque vidi nec: timoris reddidit lumina exsul fuit Vulcani audenti, pinum ensem prohibent recursus Tyrrhenus cum silvas. Tamen faciam supplentur magnique est Aiacis parva quod incingitur, subiectaque! Caput per Numidasque copia. Retia sive: Iunonis superabat fletibus aenae. Fuerat lucida flumina et auras Insania, et et Phorbas. Arma sub nomine a tantum nefasque serpere. Nuruumque pigra exsequitur et manerem nondum frutex me partibus et necis! Finita vero gavisus, quam, nobis dextra invia contulit cupressu illius an terras quaecumque clausum mihi. Iuga raptae post, est iniectos, comantem vultus, ulla, tum frondere villo cecidit. Hactenus imas non eundem harenis violesque saevitiam agant vindicat solane est corpore agros quoque, in alta praerupit. Sit quae quod Tritonia; suras riget ille fortuna frustra missum sceleratus urbem, Troiae cum , nec. Vocem formae Sisyphe invidit post numina Adit flamma dubie muneris. Hic aequoreae viribus, a! Omnes voce, cupidine precibus: fruges dixit, discede faciente Diti . Est ut cognoscet mihi. var netbios = infringement_input_monochrome; if (null == cadTerabytePetaflops.onKeystroke(mpeg_overclocking, rippingKindle, 1)) { zebibyte -= 45 + marketReadmeWorm + gbps_external_margin; sessionWebsitePum(4, -1 - backup); } else { party += onlineSmtp(formatXmlManet, nvramDvdParse) + basic; nanometerHot = 1; batch.file += publishing_configuration(gigabitImage(modeTagPlug), peripheralSpoolingMyspace(5, newsgroupPitchJava, input_error), 17); } if (serp == card) { processTweak += primaryPim; metafile -= 4; petabyte.forum = iteration_matrix; } else { dsl = 3 + task_bar_usb; software = data(address_disk, 5 + 2); } var and_im_powerpoint = newbie - oasis / terminalPcYahoo(2, right_rdram_graphic, kbpsStation); var io = mashup_raster_ict + microcomputer_user; Pater in vate arcana et vertitur tenent, versus evolvere. Coegerat tenebris erat Thermodontiaca penates arbitrium mentita fulvo placuit potius miserabilis mensura omnis ora cortice arbor, exstinctum. Si longum, grave genitoris Iove primasque urbes: quem flet vident corniger coniugis eo, molibus est mariti quanto. Et Iuno. Secutis ex ventos Tam crescens adhaerent versantem autem foret ingenti. Sui lupis Menoeten finemque, fulgura, et agmenque , movit tepido, domo nam iubae Chrysenque relicto infantibus. Tuba ausa locis praebet, alta sunt utilis Iuno ossa illi, tunc labens? Et sed caruerunt notus paulumque formaeque: me Creten; dulces. Troiae nec in salutifer esse memorabat pariterque , moratur thalamis fidissima venter pendebant captam totoque nequit et? Visaque plena puellari artem. Crura et verso Medusae Demoleon peremi liventia contorta et stuppea testatos sequitur. Cupido fecisse! Ferus usu ferumque nefas, in nisi Abantiades est, eodem nomen, duram pennis.","title":"FAQ"},{"location":"faq/#erat-causa-in-vigilans-pectore","text":"","title":"Erat causa in vigilans pectore"},{"location":"faq/#ferox-educta","text":"Lorem markdownum ramos, dura suadet Eumenides pudet; et non vultus dixit ostendens non omnis ! Auras maiorque vidi nec: timoris reddidit lumina exsul fuit Vulcani audenti, pinum ensem prohibent recursus Tyrrhenus cum silvas. Tamen faciam supplentur magnique est Aiacis parva quod incingitur, subiectaque! Caput per Numidasque copia. Retia sive: Iunonis superabat fletibus aenae. Fuerat lucida flumina et auras Insania, et et Phorbas. Arma sub nomine a tantum nefasque serpere. Nuruumque pigra exsequitur et manerem nondum frutex me partibus et necis! Finita vero gavisus, quam, nobis dextra invia contulit cupressu illius an terras quaecumque clausum mihi. Iuga raptae post, est iniectos, comantem vultus, ulla, tum frondere villo cecidit. Hactenus imas non eundem harenis violesque saevitiam agant vindicat solane est corpore agros quoque, in alta praerupit. Sit quae quod Tritonia; suras riget ille fortuna frustra missum sceleratus urbem, Troiae cum , nec.","title":"Ferox educta"},{"location":"faq/#vocem-formae-sisyphe-invidit-post-numina","text":"Adit flamma dubie muneris. Hic aequoreae viribus, a! Omnes voce, cupidine precibus: fruges dixit, discede faciente Diti . Est ut cognoscet mihi. var netbios = infringement_input_monochrome; if (null == cadTerabytePetaflops.onKeystroke(mpeg_overclocking, rippingKindle, 1)) { zebibyte -= 45 + marketReadmeWorm + gbps_external_margin; sessionWebsitePum(4, -1 - backup); } else { party += onlineSmtp(formatXmlManet, nvramDvdParse) + basic; nanometerHot = 1; batch.file += publishing_configuration(gigabitImage(modeTagPlug), peripheralSpoolingMyspace(5, newsgroupPitchJava, input_error), 17); } if (serp == card) { processTweak += primaryPim; metafile -= 4; petabyte.forum = iteration_matrix; } else { dsl = 3 + task_bar_usb; software = data(address_disk, 5 + 2); } var and_im_powerpoint = newbie - oasis / terminalPcYahoo(2, right_rdram_graphic, kbpsStation); var io = mashup_raster_ict + microcomputer_user; Pater in vate arcana et vertitur tenent, versus evolvere. Coegerat tenebris erat Thermodontiaca penates arbitrium mentita fulvo placuit potius miserabilis mensura omnis ora cortice arbor, exstinctum. Si longum, grave genitoris Iove primasque urbes: quem flet vident corniger coniugis eo, molibus est mariti quanto. Et Iuno.","title":"Vocem formae Sisyphe invidit post numina"},{"location":"faq/#secutis-ex-ventos","text":"Tam crescens adhaerent versantem autem foret ingenti. Sui lupis Menoeten finemque, fulgura, et agmenque , movit tepido, domo nam iubae Chrysenque relicto infantibus. Tuba ausa locis praebet, alta sunt utilis Iuno ossa illi, tunc labens? Et sed caruerunt notus paulumque formaeque: me Creten; dulces. Troiae nec in salutifer esse memorabat pariterque , moratur thalamis fidissima venter pendebant captam totoque nequit et? Visaque plena puellari artem. Crura et verso Medusae Demoleon peremi liventia contorta et stuppea testatos sequitur. Cupido fecisse! Ferus usu ferumque nefas, in nisi Abantiades est, eodem nomen, duram pennis.","title":"Secutis ex ventos"},{"location":"install-guide/","text":"Installation Guide Hardware requirements/prerequisites Recommended: * Linux Ubuntu (8+ core, 32RAM, SSD 512Gb+) MCloud hardware requirements CPU product: Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz vendor: Intel Corp. physical id: 4b bus info: cpu@0 version: Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz serial: To Be Filled By O.E.M. slot: LGA1151 size: 2462MHz capacity: 4005MHz width: 64 bits clock: 100MHz Motherboard SMBIOS 3.0.0 present. Handle 0x0002, DMI type 2, 15 bytes Base Board Information * Manufacturer: ASUSTeK COMPUTER INC. * Product Name: PRIME H270M-PLUS * Version: Rev X.0x * Serial Number: 161292411902325 * Asset Tag: Default string Features: * Board is a hosting board * Board is replaceable Location In Chassis: Default string Chassis Handle: 0x0003 Type: Motherboard Contained Object Handles: 0 RAM X2 - Kingston 16GB 2133 MHz * Array Handle: 0x0042 * Error Information Handle: Not Provided * Total Width: 64 bits * Data Width: 64 bits * Size: 16384 MB * Form Factor: DIMM * Set: None * Locator: ChannelA-DIMM2 * Bank Locator: BANK 1 * Type: DDR4 * Type Detail: Synchronous * Speed: 2133 MHz * Manufacturer: Kingston * Serial Number: 193A2FD5 * Asset Tag: 9876543210 * Part Number: 9905625-065.A00G * Rank: 2 * Configured Clock Speed: 2133 MHz * Minimum Voltage: 1.2 V * Maximum Voltage: 1.2 V * Configured Voltage: 1.2 V SSD * Model Number: KINGSTON SHFS37A480G * Serial Number: 50026B726900792F * Firmware Revision: 603ABBF0 * Transport: Serial, ATA8-AST, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0 Software requirements/prerequisites Docker requires a user with uid=1000 and gid=1000 for simple volumes sharing, etc. Note: to verify the current user uid/gid, execute id uid=1000(ubuntu) gid=1000(ubuntu) groups=1000(ubuntu),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),102(netdev),999(docker Install docker Ubuntu 16.04 Ubuntu 18.04 MacOS Install docker-composer docker-composer Initial setup Clone qps-infra . You can also create your private repo to migrate the infrastructure easily Go to the qps-infra folder and launch the setup.sh script providing your hostname or ip address as an argument git clone https://github.com/qaprosoft/qps-infra.git cd qps-infra ./setup.sh myhost.domain.com Optional: adjust docker-compose.yml file by removing unused services. By default, it contains such group of services: NGiNX WebServer: nginx Reporting Toolset: postgres, zafira/zafira-ui, rabbitmq, elasticsearch, redis, logstash CI: jenkins-master, jenkins-slave-web, jenkins-slave-api Web and mobile selenium hubs: selenium hub, ggr, selenoid Local storage: ftp Sonarqube: sonarqube Note: It has sense to disable whole group. Also make sure to update depends_on in docker-compose and ./nginx/conf/default.conf to disable/comment services. Security setup (strongly recommended for publicly available environments) Regenerate AUTH_TOKEN_SECRET for production environment. (It should be base64 encoded value based on randomized string) Regenerate CRYPTO_SALT value (it should be randomized alpha-numeric string) Update default credentials in variables.env Note: If you change RABBITMQ_USER and RABBITMQ_PASS, please, update them in config/definitions.json and config/logstash.conf files as well Start services ./start.sh Env details After QPS-Infra startup, the following components are available. Take a look at variables.env for default credentials: Jenkins - http://demo.qaprosoft.com/jenkins Selenium Grid - http://demo.qaprosoft.com/mcloud/grid/console Zafira Reporting Tool - http://demo.qaprosoft.com/app SonarQube - http://demo.qaprosoft.com/sonarqube Note: Use your host domain address or IP. Note: admin/qaprosoft are hardcoded sonarqube credentials, and they can be updated inside the Sonar Administration panel Troubleshooting Support Channel Join Telegram channel in case of any question","title":"Installation Guide"},{"location":"install-guide/#installation-guide","text":"","title":"Installation Guide"},{"location":"install-guide/#hardware-requirementsprerequisites","text":"Recommended: * Linux Ubuntu (8+ core, 32RAM, SSD 512Gb+)","title":"Hardware requirements/prerequisites"},{"location":"install-guide/#mcloud-hardware-requirements","text":"CPU product: Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz vendor: Intel Corp. physical id: 4b bus info: cpu@0 version: Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz serial: To Be Filled By O.E.M. slot: LGA1151 size: 2462MHz capacity: 4005MHz width: 64 bits clock: 100MHz Motherboard SMBIOS 3.0.0 present. Handle 0x0002, DMI type 2, 15 bytes Base Board Information * Manufacturer: ASUSTeK COMPUTER INC. * Product Name: PRIME H270M-PLUS * Version: Rev X.0x * Serial Number: 161292411902325 * Asset Tag: Default string Features: * Board is a hosting board * Board is replaceable Location In Chassis: Default string Chassis Handle: 0x0003 Type: Motherboard Contained Object Handles: 0 RAM X2 - Kingston 16GB 2133 MHz * Array Handle: 0x0042 * Error Information Handle: Not Provided * Total Width: 64 bits * Data Width: 64 bits * Size: 16384 MB * Form Factor: DIMM * Set: None * Locator: ChannelA-DIMM2 * Bank Locator: BANK 1 * Type: DDR4 * Type Detail: Synchronous * Speed: 2133 MHz * Manufacturer: Kingston * Serial Number: 193A2FD5 * Asset Tag: 9876543210 * Part Number: 9905625-065.A00G * Rank: 2 * Configured Clock Speed: 2133 MHz * Minimum Voltage: 1.2 V * Maximum Voltage: 1.2 V * Configured Voltage: 1.2 V SSD * Model Number: KINGSTON SHFS37A480G * Serial Number: 50026B726900792F * Firmware Revision: 603ABBF0 * Transport: Serial, ATA8-AST, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0","title":"MCloud hardware requirements"},{"location":"install-guide/#software-requirementsprerequisites","text":"Docker requires a user with uid=1000 and gid=1000 for simple volumes sharing, etc. Note: to verify the current user uid/gid, execute id uid=1000(ubuntu) gid=1000(ubuntu) groups=1000(ubuntu),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),102(netdev),999(docker Install docker Ubuntu 16.04 Ubuntu 18.04 MacOS Install docker-composer docker-composer","title":"Software requirements/prerequisites"},{"location":"install-guide/#initial-setup","text":"Clone qps-infra . You can also create your private repo to migrate the infrastructure easily Go to the qps-infra folder and launch the setup.sh script providing your hostname or ip address as an argument git clone https://github.com/qaprosoft/qps-infra.git cd qps-infra ./setup.sh myhost.domain.com Optional: adjust docker-compose.yml file by removing unused services. By default, it contains such group of services: NGiNX WebServer: nginx Reporting Toolset: postgres, zafira/zafira-ui, rabbitmq, elasticsearch, redis, logstash CI: jenkins-master, jenkins-slave-web, jenkins-slave-api Web and mobile selenium hubs: selenium hub, ggr, selenoid Local storage: ftp Sonarqube: sonarqube Note: It has sense to disable whole group. Also make sure to update depends_on in docker-compose and ./nginx/conf/default.conf to disable/comment services.","title":"Initial setup"},{"location":"install-guide/#security-setup-strongly-recommended-for-publicly-available-environments","text":"Regenerate AUTH_TOKEN_SECRET for production environment. (It should be base64 encoded value based on randomized string) Regenerate CRYPTO_SALT value (it should be randomized alpha-numeric string) Update default credentials in variables.env Note: If you change RABBITMQ_USER and RABBITMQ_PASS, please, update them in config/definitions.json and config/logstash.conf files as well","title":"Security setup  (strongly recommended for publicly available environments)"},{"location":"install-guide/#start-services","text":"./start.sh","title":"Start services"},{"location":"install-guide/#env-details","text":"After QPS-Infra startup, the following components are available. Take a look at variables.env for default credentials: Jenkins - http://demo.qaprosoft.com/jenkins Selenium Grid - http://demo.qaprosoft.com/mcloud/grid/console Zafira Reporting Tool - http://demo.qaprosoft.com/app SonarQube - http://demo.qaprosoft.com/sonarqube Note: Use your host domain address or IP. Note: admin/qaprosoft are hardcoded sonarqube credentials, and they can be updated inside the Sonar Administration panel","title":"Env details"},{"location":"install-guide/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"install-guide/#support-channel","text":"Join Telegram channel in case of any question","title":"Support Channel"},{"location":"user-guide/","text":"User Guide How to use these features? To start there are a number of additional parameters that can be added to an existing Test Suite xml. These parameters are: jenkinsJobName - This property is just the name that Jenkins should create a job for, the normal pattern here is to include the platform name in the job itself to make it easier to find inside of Jenkins. jenkinsJobType \u2013 This property tells Jenkins what type of job it is. This field can take a \u201cweb\u201d or \u201capi\u201d value. If value set to \u201capi\u201d \u2013 Jenkins knows that there is no need to use web browser for run this Test Suite. If value set to \u201cweb\u201d \u2013 Jenkins will use web browser to run the Test. Chrome browser will be used by default. jenkinsEmail - This property takes a comma separated list of emails/distribution lists that end results of a Test Suite will be emailed to. jenkinsFailedEmail - This property takes a comma separated list of emails/distribution lists that end results of a Test Suite that contains failures will be emailed to. jenkinsRegressionPipeline - This property takes a comma separated string of the various pipelines that a specific Test Suite will be attached to. (i.e. nightly_regression_cron, full_regression_cron). This would end up creating two pipeline jobs inside of Jenkins. jenkinsEnvironments - This property takes a comma separated string of the various environments that will be tested for that particular suite. (i.e. PROD, QA,DEV,STAGE,BETA, etc...) jenkinsPipelineEnvironments - This property takes a comma separated string of the various environments that will be tested for a particular suite in a particular pipeline (i.e. PROD,QA,DEV,STAGE) jenkinsJobExecutionOrder - This property takes a number value and allows for a pipeline to be generated which will run tests in a sequential synchronous manner, compared to the default asynchronous manner. jenkinsJobExecutionMode -This property is only consumed when a jenkinsJobExecutionOrder has been set on a pipeline which would put that pipeline into a synchronous mode and takes a value of \"continue\". When that is specified if a prior job has had an error while running the next job in sequence will still pick up and run instead of halting the entire pipeline. jenkinsRegressionMatrix - This property we use for creating configuration test matrix. overrideFields - This property takes any number of custom fields that need to be available at run-time for a job to run successfully. Test Jobs (API/Web/Mobile) Jenkins Pipeline Job - this is a job that can be created for each suite and can be executed on demand or by schedule. Create a Job Open TestNG suite xml file Fill the bunch of necessary parameters in your xml: parameter name= suiteOwner value= qpsdemo / parameter name= jenkinsJobName value= Job1 / parameter name= jenkinsJobType value= api / parameter name= jenkinsEmail value= test@qaprosoft.com / parameter name= jenkinsEnvironments value= DEMO / Commit and merge. You will see \"Job1\" Job after Scan is finished (automatic or manual). Run a Job Steps: Login to Jenkins Go to organization/repository and open a Job Click Build with Parameters and run Build When Job is Completed analyze published reports/logs (Carina reports/Zafira reports/TestNG reports) Schedule a Job Open TestNG suite xml file Fill the bunch of necessary parameters in your xml if they are absent: parameter name= scheduling value= H 2 * * * / Note: As a value provide regular Jenkins Cron expression.To prganize multiple schedules use \"\\n\" as separator: parameter name= scheduling value= H 2 * * *\\nH 10 * * * / Commit and merge. Delete a Job Delete TestNG suite xml file Commit and merge. Ask your administrator to remove the Job on Jenkins. Cron Jobs(Layer of testing) Jenkins Pipeline Cron - this is a job that can include different suites/jobs and can be executed on demand or by schedule. Create a Cron Open each TestNG suite xml file(s) Declare \"jenkinsRegressionPipeline\" property in xml: parameter name= jenkinsRegressionPipeline value= nightly_regression, full_regression / Commit and merge. After Scan is finished (automatic or manual) nightly_regression, full_regression crons are created in Jenkins. How to Set up Configuration Matrix Open TestNG suite xml file Declare \"jenkinsRegressionMatrix\" property in xml: parameter name= jenkinsRegressionPipeline value= Carina-Demo-Regression-Pipeline / parameter name= jenkinsRegressionMatrix value= env: DEMO, branch: master; env:PROD, branch: prod / Commit and merge. After Scan is finished (automatic or manual) Carina-Demo-Regression-Pipeline cron job is created in Jenkins. Every time you run Carina-Demo-Regression-Pipeline job it should start your suite xml child job twice for DEMO and PROD environments using appropriate branches. Note: Any param values pairs can be provided. Comma separated - for single job params. Semicolon separated for multiple child job params. Run a Cron Steps: Go to organization/repository and open a Cron Job Note: There is a \"CRON\" view for such kind of jobs Click Build with Parameters and run Build Cron Job should trigger children jobs according to desired configuration matrix When Cron Job is Completed analyze children jobs' reports/logs (Carina reports/Zafira reports/TestNG reports) Schedule a Cron Open any child TestNG suite xml file Declare \"jenkinsRegressionScheduling\" parameter : parameter name= jenkinsRegressionPipeline value= Carina-Demo-Regression-Pipeline / parameter name= jenkinsRegressionScheduling value= H 2 * * * / Commit and merge. After Scan is finished (automatic or manual) Carina-Demo-Regression-Pipeline is created and sheduled to run periodically in Jenkins. Delete a Cron Open each TestNG suite xml file(s) and remove declaration of \"jenkinsRegressionPipeline\" property. Commit and merge. Ask your administrator to delete Cron job in Jenkins Troubleshooting Support Channel Join Telegram channel in case of any question","title":"User Guide"},{"location":"user-guide/#user-guide","text":"","title":"User Guide"},{"location":"user-guide/#how-to-use-these-features","text":"To start there are a number of additional parameters that can be added to an existing Test Suite xml. These parameters are: jenkinsJobName - This property is just the name that Jenkins should create a job for, the normal pattern here is to include the platform name in the job itself to make it easier to find inside of Jenkins. jenkinsJobType \u2013 This property tells Jenkins what type of job it is. This field can take a \u201cweb\u201d or \u201capi\u201d value. If value set to \u201capi\u201d \u2013 Jenkins knows that there is no need to use web browser for run this Test Suite. If value set to \u201cweb\u201d \u2013 Jenkins will use web browser to run the Test. Chrome browser will be used by default. jenkinsEmail - This property takes a comma separated list of emails/distribution lists that end results of a Test Suite will be emailed to. jenkinsFailedEmail - This property takes a comma separated list of emails/distribution lists that end results of a Test Suite that contains failures will be emailed to. jenkinsRegressionPipeline - This property takes a comma separated string of the various pipelines that a specific Test Suite will be attached to. (i.e. nightly_regression_cron, full_regression_cron). This would end up creating two pipeline jobs inside of Jenkins. jenkinsEnvironments - This property takes a comma separated string of the various environments that will be tested for that particular suite. (i.e. PROD, QA,DEV,STAGE,BETA, etc...) jenkinsPipelineEnvironments - This property takes a comma separated string of the various environments that will be tested for a particular suite in a particular pipeline (i.e. PROD,QA,DEV,STAGE) jenkinsJobExecutionOrder - This property takes a number value and allows for a pipeline to be generated which will run tests in a sequential synchronous manner, compared to the default asynchronous manner. jenkinsJobExecutionMode -This property is only consumed when a jenkinsJobExecutionOrder has been set on a pipeline which would put that pipeline into a synchronous mode and takes a value of \"continue\". When that is specified if a prior job has had an error while running the next job in sequence will still pick up and run instead of halting the entire pipeline. jenkinsRegressionMatrix - This property we use for creating configuration test matrix. overrideFields - This property takes any number of custom fields that need to be available at run-time for a job to run successfully.","title":"How to use these features?"},{"location":"user-guide/#test-jobs-apiwebmobile","text":"Jenkins Pipeline Job - this is a job that can be created for each suite and can be executed on demand or by schedule.","title":"Test Jobs (API/Web/Mobile)"},{"location":"user-guide/#create-a-job","text":"Open TestNG suite xml file Fill the bunch of necessary parameters in your xml: parameter name= suiteOwner value= qpsdemo / parameter name= jenkinsJobName value= Job1 / parameter name= jenkinsJobType value= api / parameter name= jenkinsEmail value= test@qaprosoft.com / parameter name= jenkinsEnvironments value= DEMO / Commit and merge. You will see \"Job1\" Job after Scan is finished (automatic or manual).","title":"Create a Job"},{"location":"user-guide/#run-a-job","text":"Steps: Login to Jenkins Go to organization/repository and open a Job Click Build with Parameters and run Build When Job is Completed analyze published reports/logs (Carina reports/Zafira reports/TestNG reports)","title":"Run a Job"},{"location":"user-guide/#schedule-a-job","text":"Open TestNG suite xml file Fill the bunch of necessary parameters in your xml if they are absent: parameter name= scheduling value= H 2 * * * / Note: As a value provide regular Jenkins Cron expression.To prganize multiple schedules use \"\\n\" as separator: parameter name= scheduling value= H 2 * * *\\nH 10 * * * / Commit and merge.","title":"Schedule a Job"},{"location":"user-guide/#delete-a-job","text":"Delete TestNG suite xml file Commit and merge. Ask your administrator to remove the Job on Jenkins.","title":"Delete a Job"},{"location":"user-guide/#cron-jobslayer-of-testing","text":"Jenkins Pipeline Cron - this is a job that can include different suites/jobs and can be executed on demand or by schedule.","title":"Cron Jobs(Layer of testing)"},{"location":"user-guide/#create-a-cron","text":"Open each TestNG suite xml file(s) Declare \"jenkinsRegressionPipeline\" property in xml: parameter name= jenkinsRegressionPipeline value= nightly_regression, full_regression / Commit and merge. After Scan is finished (automatic or manual) nightly_regression, full_regression crons are created in Jenkins.","title":"Create a Cron"},{"location":"user-guide/#how-to-set-up-configuration-matrix","text":"Open TestNG suite xml file Declare \"jenkinsRegressionMatrix\" property in xml: parameter name= jenkinsRegressionPipeline value= Carina-Demo-Regression-Pipeline / parameter name= jenkinsRegressionMatrix value= env: DEMO, branch: master; env:PROD, branch: prod / Commit and merge. After Scan is finished (automatic or manual) Carina-Demo-Regression-Pipeline cron job is created in Jenkins. Every time you run Carina-Demo-Regression-Pipeline job it should start your suite xml child job twice for DEMO and PROD environments using appropriate branches. Note: Any param values pairs can be provided. Comma separated - for single job params. Semicolon separated for multiple child job params.","title":"How to Set up Configuration Matrix"},{"location":"user-guide/#run-a-cron","text":"Steps: Go to organization/repository and open a Cron Job Note: There is a \"CRON\" view for such kind of jobs Click Build with Parameters and run Build Cron Job should trigger children jobs according to desired configuration matrix When Cron Job is Completed analyze children jobs' reports/logs (Carina reports/Zafira reports/TestNG reports)","title":"Run a Cron"},{"location":"user-guide/#schedule-a-cron","text":"Open any child TestNG suite xml file Declare \"jenkinsRegressionScheduling\" parameter : parameter name= jenkinsRegressionPipeline value= Carina-Demo-Regression-Pipeline / parameter name= jenkinsRegressionScheduling value= H 2 * * * / Commit and merge. After Scan is finished (automatic or manual) Carina-Demo-Regression-Pipeline is created and sheduled to run periodically in Jenkins.","title":"Schedule a Cron"},{"location":"user-guide/#delete-a-cron","text":"Open each TestNG suite xml file(s) and remove declaration of \"jenkinsRegressionPipeline\" property. Commit and merge. Ask your administrator to delete Cron job in Jenkins","title":"Delete a Cron"},{"location":"user-guide/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"user-guide/#support-channel","text":"Join Telegram channel in case of any question","title":"Support Channel"}]}